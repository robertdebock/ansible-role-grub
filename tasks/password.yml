---
- name: "grub password | get efi path"
  ansible.builtin.stat:
    path: /sys/firmware/efi/efivars/
  register: grub_efi

- name: "grub password | remove unwanted grub.cfg on EFI systems"
  ansible.builtin.file:
    state: absent
    path: /boot/grub2/grub.cfg
  when: grub_efi.stat.exists == True

- name: "grub password | Install user template"
  ansible.builtin.template:
    src: 01_users.j2
    dest: /etc/grub.d/01_users
    owner: root
    group: root
    mode: '0700'
  notify:
    - update grub

- name: "grub password | EFI | add password"
  ansible.builtin.lineinfile:
    dest: /etc/grub2-efi.cfg
    regexp: "^password_pbkdf2 {{ grub_user }} "
    state: present
    insertafter: EOF
    line: 'password_pbkdf2 {{ grub_user }} {{ grub_password }}'
  when: grub_efi.stat.exists == True
  notify:
    - update grub

- name: "grub password | MBR | add password"
  ansible.builtin.lineinfile:
    dest: /etc/grub2.cfg
    regexp: "^password_pbkdf2 {{ grub_user }} "
    state: present
    insertafter: EOF
    line: 'password_pbkdf2 {{ grub_user }} {{ grub_password }}'
  when: grub_efi.stat.exists == False
  notify:
    - update grub

- name: "grub password | add --unrestricted"
  ansible.builtin.replace:
    dest: "{{ item }}"
    regexp: '^CLASS="(((?!--unrestricted).)*)"$'
    replace: 'CLASS="\1 --unrestricted"'
  with_items: "{{ grub_password_unrestricted_files }}"
  when: grub_password_unrestricted | bool
  notify:
    - update grub
